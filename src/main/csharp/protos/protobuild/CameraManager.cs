// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_manager.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Roeper.Bu.Kinect.Master.Camera {

  /// <summary>Holder for reflection information generated from camera_manager.proto</summary>
  public static partial class CameraManagerReflection {

    #region Descriptor
    /// <summary>File descriptor for camera_manager.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CameraManagerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRjYW1lcmFfbWFuYWdlci5wcm90bxIecm9lcGVyLmJ1LmtpbmVjdC5tYXN0",
            "ZXIuY2FtZXJhIlEKE1JlZ2lzdHJhdGlvblJlcXVlc3QSOgoFcHJvcHMYASAB",
            "KAsyKy5yb2VwZXIuYnUua2luZWN0Lm1hc3Rlci5jYW1lcmEuQ2FtZXJhUHJv",
            "cHMiUgoUUmVnaXN0cmF0aW9uUmVzcG9uc2USOgoFcHJvcHMYASABKAsyKy5y",
            "b2VwZXIuYnUua2luZWN0Lm1hc3Rlci5jYW1lcmEuQ2FtZXJhUHJvcHMiNQoL",
            "Q2FtZXJhUHJvcHMSCgoCaWQYASABKAkSDAoEaG9zdBgCIAEoCRIMCgRwb3J0",
            "GAMgASgFMo4BCg1DYW1lcmFNYW5hZ2VyEn0KDnJlZ2lzdGVyQ2FtZXJhEjMu",
            "cm9lcGVyLmJ1LmtpbmVjdC5tYXN0ZXIuY2FtZXJhLlJlZ2lzdHJhdGlvblJl",
            "cXVlc3QaNC5yb2VwZXIuYnUua2luZWN0Lm1hc3Rlci5jYW1lcmEuUmVnaXN0",
            "cmF0aW9uUmVzcG9uc2UiAEIqCiJjb20ucm9lcGVyLmJ1LmtpbmVjdC5tYXN0",
            "ZXIuY2FtZXJhQgRHcnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Roeper.Bu.Kinect.Master.Camera.RegistrationRequest), global::Roeper.Bu.Kinect.Master.Camera.RegistrationRequest.Parser, new[]{ "Props" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roeper.Bu.Kinect.Master.Camera.RegistrationResponse), global::Roeper.Bu.Kinect.Master.Camera.RegistrationResponse.Parser, new[]{ "Props" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roeper.Bu.Kinect.Master.Camera.CameraProps), global::Roeper.Bu.Kinect.Master.Camera.CameraProps.Parser, new[]{ "Id", "Host", "Port" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegistrationRequest : pb::IMessage<RegistrationRequest> {
    private static readonly pb::MessageParser<RegistrationRequest> _parser = new pb::MessageParser<RegistrationRequest>(() => new RegistrationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roeper.Bu.Kinect.Master.Camera.CameraManagerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest(RegistrationRequest other) : this() {
      Props = other.props_ != null ? other.Props.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest Clone() {
      return new RegistrationRequest(this);
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 1;
    private global::Roeper.Bu.Kinect.Master.Camera.CameraProps props_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roeper.Bu.Kinect.Master.Camera.CameraProps Props {
      get { return props_; }
      set {
        props_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Props, other.Props)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (props_ != null) hash ^= Props.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (props_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Props);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (props_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Props);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.props_ != null) {
        if (props_ == null) {
          props_ = new global::Roeper.Bu.Kinect.Master.Camera.CameraProps();
        }
        Props.MergeFrom(other.Props);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (props_ == null) {
              props_ = new global::Roeper.Bu.Kinect.Master.Camera.CameraProps();
            }
            input.ReadMessage(props_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegistrationResponse : pb::IMessage<RegistrationResponse> {
    private static readonly pb::MessageParser<RegistrationResponse> _parser = new pb::MessageParser<RegistrationResponse>(() => new RegistrationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roeper.Bu.Kinect.Master.Camera.CameraManagerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse(RegistrationResponse other) : this() {
      Props = other.props_ != null ? other.Props.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse Clone() {
      return new RegistrationResponse(this);
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 1;
    private global::Roeper.Bu.Kinect.Master.Camera.CameraProps props_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roeper.Bu.Kinect.Master.Camera.CameraProps Props {
      get { return props_; }
      set {
        props_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Props, other.Props)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (props_ != null) hash ^= Props.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (props_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Props);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (props_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Props);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.props_ != null) {
        if (props_ == null) {
          props_ = new global::Roeper.Bu.Kinect.Master.Camera.CameraProps();
        }
        Props.MergeFrom(other.Props);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (props_ == null) {
              props_ = new global::Roeper.Bu.Kinect.Master.Camera.CameraProps();
            }
            input.ReadMessage(props_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CameraProps : pb::IMessage<CameraProps> {
    private static readonly pb::MessageParser<CameraProps> _parser = new pb::MessageParser<CameraProps>(() => new CameraProps());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roeper.Bu.Kinect.Master.Camera.CameraManagerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraProps(CameraProps other) : this() {
      id_ = other.id_;
      host_ = other.host_;
      port_ = other.port_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraProps Clone() {
      return new CameraProps(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraProps other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
